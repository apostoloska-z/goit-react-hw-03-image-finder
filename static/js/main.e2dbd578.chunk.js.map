{"version":3,"sources":["services/images-api.js","Components/Searchbar/Searchbar.js","Components/ImageGalleryItem/ImageGalleryItem.js","Components/ImageGallery/ImageGallery.js","Components/Button/Button.js","Components/Modal/Modal.js","App.js","index.js"],"names":["fetchImages","searchQuery","currentPage","axios","get","then","response","data","hits","Searchbar","state","query","handleChange","event","setState","currentTarget","value","handleSubmit","preventDefault","props","onSubmit","className","this","type","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","id","src","alt","modsrc","data-source","ImageGallery","images","onClick","map","image","webformatURL","tags","largeImageURL","Button","modalRoot","document","querySelector","Modal","handleKeydown","code","handleModal","handleOverlayClick","target","window","addEventListener","removeEventListener","createPortal","App","isLoading","showModal","largeImgSrc","largeImgAlt","error","onChangeQuery","uploadGallery","options","res","prevState","catch","finally","openModal","dataset","source","toggleModal","prevProps","scrollTo","top","documentElement","scrollHeight","behavior","color","height","width","timeout","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e2dbd578.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst BASE_URL = 'https://pixabay.com/api/';\r\nconst API_KEY = '20648109-aff5f53cd54a5f40fa07937d6';\r\n\r\nconst fetchImages = ({ searchQuery = '', currentPage = 1 }) => {\r\n    return axios\r\n        .get(`${BASE_URL}?image_type=photo&orientation=horizontal&q=${searchQuery}&page=${currentPage}&per_page=12&key=${API_KEY}`,)\r\n        .then(response => response.data.hits);\r\n};\r\n\r\nexport default fetchImages;","import { Component } from 'react';\r\nimport \"./Searchbar.scss\"\r\n\r\nclass Searchbar extends Component {\r\n\r\n    state = {\r\n        query: '',\r\n    }\r\n\r\n    handleChange = event => {\r\n        this.setState({query: event.currentTarget.value})\r\n    }\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n        this.props.onSubmit(this.state.query);\r\n        this.setState({query:''})\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <header className=\"Searchbar\">\r\n                <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\r\n                    <button type=\"submit\" className=\"SearchForm-button\">\r\n                        <span className=\"SearchForm-button-label\">Search</span>\r\n                    </button>\r\n\r\n                    <input\r\n                    className=\"SearchForm-input\"\r\n                    type=\"text\"\r\n                    autoComplete=\"off\"\r\n                    autoFocus\r\n                    placeholder=\"Search images and photos\"\r\n                    value={this.state.query}\r\n                    onChange = {this.handleChange}\r\n                    />\r\n                </form>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n    \r\n\r\n\r\nexport default Searchbar;","import \"./ImageGalleryItem.scss\"\r\n\r\nconst ImageGalleryItem = ({id, src, alt, modsrc}) => (\r\n    <li key={id} className=\"ImageGalleryItem\">\r\n        <img id={id} src={src} alt={alt} data-source={modsrc} className=\"ImageGalleryItem-image\" />\r\n    </li>\r\n)\r\n\r\nexport default ImageGalleryItem;","import \"./ImageGallery.scss\"\r\nimport ImageGalleryItem from \"../ImageGalleryItem\";\r\n\r\nconst ImageGallery = ({images, onClick}) => (\r\n    <ul className=\"ImageGallery\" onClick={onClick}>\r\n        {images.map(image => (\r\n            <ImageGalleryItem\r\n                id={image.id}\r\n                src={image.webformatURL}\r\n                alt={image.tags}\r\n                modsrc={image.largeImageURL}\r\n            />\r\n        ))}\r\n    </ul>\r\n)\r\n\r\nexport default ImageGallery;","import \"./Button.scss\"\r\n\r\nconst Button = ({onClick}) => (\r\n    <button onClick={onClick} type=\"button\" className=\"Button\">Load more</button>\r\n)\r\n\r\nexport default Button;","import \"./Modal.scss\";\r\nimport { Component } from \"react\";\r\nimport { createPortal } from 'react-dom';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nclass Modal extends Component {\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleKeydown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeydown);\r\n  }\r\n\r\n  handleKeydown = event => {\r\n    if (event.code === 'Escape') {\r\n      this.props.handleModal();\r\n    }\r\n  };\r\n\r\n  handleOverlayClick = event => {\r\n    if (event.currentTarget === event.target) {\r\n      this.props.handleModal();\r\n    }\r\n  };\r\n\r\n\r\n\r\n    render() {\r\n        return createPortal(\r\n            <div className=\"Overlay\" onClick={this.handleOverlayClick}>\r\n                <div className=\"Modal\">\r\n                    <img src={this.props.src} alt={this.props.alt} />\r\n                </div>\r\n            </div>,\r\n            modalRoot\r\n        )\r\n    }\r\n} \r\n\r\nexport default Modal;","import { Component } from 'react';\nimport \"./styles.scss\"\n\nimport Loader from \"react-loader-spinner\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\n\nimport fetchImages from \"./services/images-api\";\nimport Searchbar from \"./Components/Searchbar/\";\nimport ImageGallery from \"./Components/ImageGallery\";\nimport Button from './Components/Button/Button';\nimport Modal from \"./Components/Modal\";\n\nclass App extends Component {\n  state = {\n    images: [],\n    currentPage: 1,\n    searchQuery: '',\n    isLoading: false,\n    showModal: false,\n    largeImgSrc: '',\n    largeImgAlt: '',\n    error: null,\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.searchQuery !== this.state.searchQuery) {\n      this.uploadGallery();\n    }\n    if (this.state.currentPage > 2) {\n      window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: 'smooth',\n      });\n    }\n  }\n\n  onChangeQuery = query => {\n    this.setState({\n      searchQuery: query,\n      currentPage: 1,\n      images: [],\n      error: null,\n    })\n    \n  }\n\n  uploadGallery = () => {\n    const { currentPage, searchQuery } = this.state;\n    const options = { currentPage, searchQuery };\n\n    this.setState({ isLoading: true });\n          \n    fetchImages(options)\n      .then(res => {\n        this.setState(prevState => ({\n          images: [...prevState.images, ...res],\n          currentPage: prevState.currentPage + 1,\n        }));\n      })\n      .catch(error => this.setState({error}))\n      .finally(() => this.setState({isLoading: false}))\n  \n  }\n\n  openModal = (event) => {\n    this.setState({\n      showModal: true,\n      largeImgSrc: event.target.dataset.source,\n      largeImgAlt:event.target.alt,\n    })\n  }\n\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({ showModal: !showModal }))\n  }\n  \n\n  render() {\n    return (\n      <>\n        {this.state.showModal && \n          <Modal\n            src={this.state.largeImgSrc}\n            // alt={this.state.largeImgAlt}\n            handleModal={this.toggleModal}\n        />}\n        <Searchbar\n          onSubmit={this.onChangeQuery} />\n        {this.state.error &&\n          <h1 className=\"Error\">There are no pictures found using this keyword. Please try another one.</h1>}\n        <ImageGallery\n          onClick={this.openModal}\n          images={this.state.images} />\n        {this.state.isLoading &&\n          <Loader\n            className=\"Loader\"\n            type=\"Ball-Triangle\"\n            color=\"#00BFFF\"\n            height={80}\n            width={80}\n            timeout={3000}\n          />}\n        {this.state.images.length > 0 &&\n        !this.state.isLoading &&\n          <Button\n            onClick={this.uploadGallery}\n        />}\n      </>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}